/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sun_jna_Native */

#ifndef _Included_com_sun_jna_Native
#define _Included_com_sun_jna_Native
#ifdef __cplusplus
extern "C" {
#endif
#undef com_sun_jna_Native_TYPE_VOIDP
#define com_sun_jna_Native_TYPE_VOIDP 0L
#undef com_sun_jna_Native_TYPE_LONG
#define com_sun_jna_Native_TYPE_LONG 1L
#undef com_sun_jna_Native_TYPE_WCHAR_T
#define com_sun_jna_Native_TYPE_WCHAR_T 2L
#undef com_sun_jna_Native_TYPE_SIZE_T
#define com_sun_jna_Native_TYPE_SIZE_T 3L
#undef com_sun_jna_Native_THREAD_NOCHANGE
#define com_sun_jna_Native_THREAD_NOCHANGE 0L
#undef com_sun_jna_Native_THREAD_DETACH
#define com_sun_jna_Native_THREAD_DETACH -1L
#undef com_sun_jna_Native_THREAD_LEAVE_ATTACHED
#define com_sun_jna_Native_THREAD_LEAVE_ATTACHED -2L
#undef com_sun_jna_Native_CB_HAS_INITIALIZER
#define com_sun_jna_Native_CB_HAS_INITIALIZER 1L
#undef com_sun_jna_Native_CVT_UNSUPPORTED
#define com_sun_jna_Native_CVT_UNSUPPORTED -1L
#undef com_sun_jna_Native_CVT_DEFAULT
#define com_sun_jna_Native_CVT_DEFAULT 0L
#undef com_sun_jna_Native_CVT_POINTER
#define com_sun_jna_Native_CVT_POINTER 1L
#undef com_sun_jna_Native_CVT_STRING
#define com_sun_jna_Native_CVT_STRING 2L
#undef com_sun_jna_Native_CVT_STRUCTURE
#define com_sun_jna_Native_CVT_STRUCTURE 3L
#undef com_sun_jna_Native_CVT_STRUCTURE_BYVAL
#define com_sun_jna_Native_CVT_STRUCTURE_BYVAL 4L
#undef com_sun_jna_Native_CVT_BUFFER
#define com_sun_jna_Native_CVT_BUFFER 5L
#undef com_sun_jna_Native_CVT_ARRAY_BYTE
#define com_sun_jna_Native_CVT_ARRAY_BYTE 6L
#undef com_sun_jna_Native_CVT_ARRAY_SHORT
#define com_sun_jna_Native_CVT_ARRAY_SHORT 7L
#undef com_sun_jna_Native_CVT_ARRAY_CHAR
#define com_sun_jna_Native_CVT_ARRAY_CHAR 8L
#undef com_sun_jna_Native_CVT_ARRAY_INT
#define com_sun_jna_Native_CVT_ARRAY_INT 9L
#undef com_sun_jna_Native_CVT_ARRAY_LONG
#define com_sun_jna_Native_CVT_ARRAY_LONG 10L
#undef com_sun_jna_Native_CVT_ARRAY_FLOAT
#define com_sun_jna_Native_CVT_ARRAY_FLOAT 11L
#undef com_sun_jna_Native_CVT_ARRAY_DOUBLE
#define com_sun_jna_Native_CVT_ARRAY_DOUBLE 12L
#undef com_sun_jna_Native_CVT_ARRAY_BOOLEAN
#define com_sun_jna_Native_CVT_ARRAY_BOOLEAN 13L
#undef com_sun_jna_Native_CVT_BOOLEAN
#define com_sun_jna_Native_CVT_BOOLEAN 14L
#undef com_sun_jna_Native_CVT_CALLBACK
#define com_sun_jna_Native_CVT_CALLBACK 15L
#undef com_sun_jna_Native_CVT_FLOAT
#define com_sun_jna_Native_CVT_FLOAT 16L
#undef com_sun_jna_Native_CVT_NATIVE_MAPPED
#define com_sun_jna_Native_CVT_NATIVE_MAPPED 17L
#undef com_sun_jna_Native_CVT_WSTRING
#define com_sun_jna_Native_CVT_WSTRING 18L
#undef com_sun_jna_Native_CVT_INTEGER_TYPE
#define com_sun_jna_Native_CVT_INTEGER_TYPE 19L
#undef com_sun_jna_Native_CVT_POINTER_TYPE
#define com_sun_jna_Native_CVT_POINTER_TYPE 20L
#undef com_sun_jna_Native_CVT_TYPE_MAPPER
#define com_sun_jna_Native_CVT_TYPE_MAPPER 21L
#undef com_sun_jna_Native_CB_OPTION_DIRECT
#define com_sun_jna_Native_CB_OPTION_DIRECT 1L
#undef com_sun_jna_Native_CB_OPTION_IN_DLL
#define com_sun_jna_Native_CB_OPTION_IN_DLL 2L
/*
 * Class:     com_sun_jna_Native
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     com_sun_jna_Native
 * Method:    setProtected
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setProtected
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_sun_jna_Native
 * Method:    isProtected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_sun_jna_Native_isProtected
  (JNIEnv *, jclass);

/*
 * Class:     com_sun_jna_Native
 * Method:    setPreserveLastError
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setPreserveLastError
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     com_sun_jna_Native
 * Method:    getPreserveLastError
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_sun_jna_Native_getPreserveLastError
  (JNIEnv *, jclass);

/*
 * Class:     com_sun_jna_Native
 * Method:    getWindowHandle0
 * Signature: (Ljava/awt/Component;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_getWindowHandle0
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_sun_jna_Native
 * Method:    _getDirectBufferPointer
 * Signature: (Ljava/nio/Buffer;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native__1getDirectBufferPointer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_sun_jna_Native
 * Method:    sizeof
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_sun_jna_Native_sizeof
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    getNativeVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_sun_jna_Native_getNativeVersion
  (JNIEnv *, jclass);

/*
 * Class:     com_sun_jna_Native
 * Method:    getAPIChecksum
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_sun_jna_Native_getAPIChecksum
  (JNIEnv *, jclass);

/*
 * Class:     com_sun_jna_Native
 * Method:    setLastError
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setLastError
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    unregister
 * Signature: (Ljava/lang/Class;[J)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_unregister
  (JNIEnv *, jclass, jclass, jlongArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    registerMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[I[J[JIJJLjava/lang/Class;JIZ[Lcom/sun/jna/ToNativeConverter;Lcom/sun/jna/FromNativeConverter;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_registerMethod
  (JNIEnv *, jclass, jclass, jstring, jstring, jintArray, jlongArray, jlongArray, jint, jlong, jlong, jclass, jlong, jint, jboolean, jobjectArray, jobject);

/*
 * Class:     com_sun_jna_Native
 * Method:    ffi_prep_cif
 * Signature: (IIJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_ffi_1prep_1cif
  (JNIEnv *, jclass, jint, jint, jlong, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    ffi_call
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_ffi_1call
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    ffi_prep_closure
 * Signature: (JLcom/sun/jna/Native/ffi_callback;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_ffi_1prep_1closure
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_sun_jna_Native
 * Method:    ffi_free_closure
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_ffi_1free_1closure
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    initialize_ffi_type
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_sun_jna_Native_initialize_1ffi_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    freeNativeCallback
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_freeNativeCallback
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    createNativeCallback
 * Signature: (Lcom/sun/jna/Callback;Ljava/lang/reflect/Method;[Ljava/lang/Class;Ljava/lang/Class;II)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_createNativeCallback
  (JNIEnv *, jclass, jobject, jobject, jobjectArray, jclass, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeInt
 * Signature: (JI[Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_com_sun_jna_Native_invokeInt
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeLong
 * Signature: (JI[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_invokeLong
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeVoid
 * Signature: (JI[Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_invokeVoid
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeFloat
 * Signature: (JI[Ljava/lang/Object;)F
 */
JNIEXPORT jfloat JNICALL Java_com_sun_jna_Native_invokeFloat
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeDouble
 * Signature: (JI[Ljava/lang/Object;)D
 */
JNIEXPORT jdouble JNICALL Java_com_sun_jna_Native_invokeDouble
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokePointer
 * Signature: (JI[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_invokePointer
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeStructure
 * Signature: (JI[Ljava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_invokeStructure
  (JNIEnv *, jclass, jlong, jint, jobjectArray, jlong, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    invokeObject
 * Signature: (JI[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_sun_jna_Native_invokeObject
  (JNIEnv *, jclass, jlong, jint, jobjectArray);

/*
 * Class:     com_sun_jna_Native
 * Method:    open
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_open
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    findSymbol
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_findSymbol
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_sun_jna_Native
 * Method:    indexOf
 * Signature: (JB)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_indexOf
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3BII
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[SII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3SII
  (JNIEnv *, jclass, jlong, jshortArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[CII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3CII
  (JNIEnv *, jclass, jlong, jcharArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[III)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3III
  (JNIEnv *, jclass, jlong, jintArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[JII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3JII
  (JNIEnv *, jclass, jlong, jlongArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[FII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3FII
  (JNIEnv *, jclass, jlong, jfloatArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    read
 * Signature: (J[DII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_read__J_3DII
  (JNIEnv *, jclass, jlong, jdoubleArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3BII
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[SII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3SII
  (JNIEnv *, jclass, jlong, jshortArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[CII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3CII
  (JNIEnv *, jclass, jlong, jcharArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[III)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3III
  (JNIEnv *, jclass, jlong, jintArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[JII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3JII
  (JNIEnv *, jclass, jlong, jlongArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[FII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3FII
  (JNIEnv *, jclass, jlong, jfloatArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    write
 * Signature: (J[DII)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_write__J_3DII
  (JNIEnv *, jclass, jlong, jdoubleArray, jint, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    getByte
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_com_sun_jna_Native_getByte
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getChar
 * Signature: (J)C
 */
JNIEXPORT jchar JNICALL Java_com_sun_jna_Native_getChar
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getShort
 * Signature: (J)S
 */
JNIEXPORT jshort JNICALL Java_com_sun_jna_Native_getShort
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getInt
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_sun_jna_Native_getInt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getLong
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_getLong
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getFloat
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_sun_jna_Native_getFloat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getDouble
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_sun_jna_Native_getDouble
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    _getPointer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native__1getPointer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getString
 * Signature: (JZ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_sun_jna_Native_getString
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_sun_jna_Native
 * Method:    setMemory
 * Signature: (JJB)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setMemory
  (JNIEnv *, jclass, jlong, jlong, jbyte);

/*
 * Class:     com_sun_jna_Native
 * Method:    setByte
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setByte
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     com_sun_jna_Native
 * Method:    setShort
 * Signature: (JS)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setShort
  (JNIEnv *, jclass, jlong, jshort);

/*
 * Class:     com_sun_jna_Native
 * Method:    setChar
 * Signature: (JC)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setChar
  (JNIEnv *, jclass, jlong, jchar);

/*
 * Class:     com_sun_jna_Native
 * Method:    setInt
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setInt
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_sun_jna_Native
 * Method:    setLong
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setLong
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    setFloat
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setFloat
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_sun_jna_Native
 * Method:    setDouble
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setDouble
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_sun_jna_Native
 * Method:    setPointer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setPointer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    setString
 * Signature: (JLjava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_setString
  (JNIEnv *, jclass, jlong, jstring, jboolean);

/*
 * Class:     com_sun_jna_Native
 * Method:    malloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_sun_jna_Native_malloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sun_jna_Native_free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_sun_jna_Native
 * Method:    getDirectByteBuffer
 * Signature: (JJ)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_sun_jna_Native_getDirectByteBuffer
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
